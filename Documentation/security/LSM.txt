Linux Security Module framework
-------------------------------

The Linux Security Module (LSM) framework provides a mechanism for
various security checks to be hooked by new kernel extensions. The name
"module" is a bit of a misnomer since these extensions are not actually
loadable kernel modules. Instead, they are selectable at build-time via
CONFIG_DEFAULT_SECURITY and can be overridden at boot-time via the
"security=..." kernel command line argument, in the case where multiple
LSMs were built into a given kernel.

Both CONFIG_DEFAULT_SECURITY and the "security=" option take a comma
separated list of LSM names. The LSM hooks are invoked in the order
specified. All hooks provided are invoked regardless of the outcome
of preceeding hooks. Hooks the return success or failure results
return success if all of the LSM provided hooks succeed and the error
code of the last failing hook on error.

The /proc filesystem attribute interface supports files from a time
when only one LSM could be used at a time. CONFIG_PRESENT_SECURITY
defines which LSM uses these interfaces. There are also LSM identified
interfaces which should be used in preference to the undifferentiated
interfaces.

The three networking mechanisms supporting LSM attributes are
restricted to providing those attributes for a single LSM each.
CONFIG_SECMARK_LSM specifies which LSM will provide hooks for the
secmark mechanism. CONFIG_NETLABEL_LSM specifies which LSM hooks
are used by NetLabel to provide IPv4 CIPSO headers. CONFIG_XFRM_LSM
specifies the LSM providing xfrm hooks.

The Linux capabilities system is used in conjunction with any LSMs.
LSM hooks are called after the capability checks in most cases,
but after in a small number of cases. All LSM hooks need to be aware
of the potential interactions with the capability system. For more
details on capabilities, see capabilities(7) in the Linux man-pages
project.

The primary users of the LSM interface are Mandatory Access Control
(MAC) extensions which provide a comprehensive security policy. Examples
include SELinux, Smack, Tomoyo, and AppArmor. In addition to the larger
MAC extensions, other extensions such as Yama can be built using the LSM
to provide specific changes to system operation when these tweaks are not
available in the core functionality of Linux itself.

Based on http://kerneltrap.org/Linux/Documenting_Security_Module_Intent,
a new LSM is accepted into the kernel when its intent (a description of
what it tries to protect against and in what cases one would expect to
use it) has been appropriately documented in Documentation/security/.
This allows an LSM's code to be easily compared to its goals, and so
that end users and distros can make a more informed decision about which
LSMs suit their requirements.

For extensive documentation on the available LSM hook interfaces, please
see include/linux/security.h.

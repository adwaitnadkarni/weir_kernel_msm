diff --git a/ext3/ext3_fs.h b/ext3co/ext3_fs.h
index 11cca1b..005da19 100644
--- a/ext3/ext3_fs.h
+++ b/ext3co/ext3_fs.h
@@ -28,6 +28,7 @@
  */
 #undef EXT3FS_DEBUG
 
+
 /*
  * Define EXT3_RESERVATION to reserve data blocks for expanding files
  */
@@ -38,7 +39,7 @@
 /*
  * Always enable hashed directories
  */
-#define CONFIG_EXT3_INDEX
+//#define CONFIG_EXT3_INDEX
 
 /*
  * Debug code
@@ -72,6 +73,15 @@
  */
 #define EXT3_LINK_MAX		32000
 
+/* For versioning -znjp */
+#define EXT3_FLUX_TOKEN '@'
+/* Macros for scoping - in seconds -znjp */
+#define ONEHOUR   3600
+#define YESTERDAY 86400
+#define ONEWEEK   604800
+#define ONEMONTH  2419200
+#define ONEYEAR   31449600
+
 /*
  * Macro-instructions used to manage several block sizes
  */
@@ -83,7 +93,7 @@
 #else
 # define EXT3_BLOCK_SIZE(s)		(EXT3_MIN_BLOCK_SIZE << (s)->s_log_block_size)
 #endif
-#define	EXT3_ADDR_PER_BLOCK(s)		(EXT3_BLOCK_SIZE(s) / sizeof (__u32))
+//#define	EXT3_ADDR_PER_BLOCK(s)		(EXT3_BLOCK_SIZE(s) / sizeof (__u32))
 #ifdef __KERNEL__
 # define EXT3_BLOCK_SIZE_BITS(s)	((s)->s_blocksize_bits)
 #else
@@ -101,6 +111,14 @@
 				 EXT3_GOOD_OLD_FIRST_INO : \
 				 (s)->s_first_ino)
 #endif
+/*
+ * Macro-instructions for versioning support - znjp
+ */
+#define EXT3_COWBITMAP_SIZE (sizeof(__u32) * 8) /* one word */
+#define EXT3_COWBITMAPS_PER_IBLOCK(s) \
+  (( (EXT3_BLOCK_SIZE(s) / sizeof(__u32)) / (EXT3_COWBITMAP_SIZE)))
+/* Accounts for COW bitmaps */
+#define EXT3_ADDR_PER_BLOCK(s) ((EXT3_BLOCK_SIZE(s) / sizeof(__u32)) - EXT3_COWBITMAPS_PER_IBLOCK(s))
 
 /*
  * Macro-instructions used to manage fragments
@@ -177,6 +195,10 @@ struct ext3_group_desc
 #define EXT3_NOTAIL_FL			0x00008000 /* file tail should not be merged */
 #define EXT3_DIRSYNC_FL			0x00010000 /* dirsync behaviour (directories only) */
 #define EXT3_TOPDIR_FL			0x00020000 /* Top of directory hierarchies*/
+/* Used for Versioning - znjp */
+#define EXT3_UNCHANGEABLE_FL 0x00040000
+#define EXT3_UNVERSIONABLE_FL 0x00080000
+#define EXT3_FAKEINODE_FL    0x00100000
 #define EXT3_RESERVED_FL		0x80000000 /* reserved for ext3 lib */
 
 #define EXT3_FL_USER_VISIBLE		0x0003DFFF /* User visible flags */
@@ -229,6 +251,9 @@ struct ext3_new_group_data {
 #endif
 #define EXT3_IOC_GETRSVSZ		_IOR('f', 5, long)
 #define EXT3_IOC_SETRSVSZ		_IOW('f', 6, long)
+/* ioctls for versioning - znjp */
+#define EXT3_IOC_TAKESNAPSHOT _IOR('f', 7, long)
+#define EXT3_IOC_GETEPOCH _IOR('f', 8, long)
 
 /*
  * ioctl commands in 32 bit emulation
@@ -278,7 +303,10 @@ struct ext3_inode {
 	__le32	i_flags;	/* File flags */
 	union {
 		struct {
-			__u32  l_i_reserved1;
+			//__u32  l_i_reserved1;
+      /* Direct block COW bitmap -znjp */
+      __u16 l_i_direct_cow_bitmap;
+      __u16 l_i_pad1;
 		} linux1;
 		struct {
 			__u32  h_i_translator;
@@ -294,12 +322,15 @@ struct ext3_inode {
 	__le32	i_faddr;	/* Fragment address */
 	union {
 		struct {
-			__u8	l_i_frag;	/* Fragment number */
-			__u8	l_i_fsize;	/* Fragment size */
-			__u16	i_pad1;
+			//__u8	l_i_frag;	/* Fragment number */
+			//__u8	l_i_fsize;	/* Fragment size */
+			//__u16	i_pad1;
 			__le16	l_i_uid_high;	/* these 2 fields    */
 			__le16	l_i_gid_high;	/* were reserved2[0] */
-			__u32	l_i_reserved2;
+			//__u32	l_i_reserved2;
+      /* Epoch number for versioning -znjp */
+      __le32 l_i_epoch_number;
+      __u32 l_i_next_inode;
 		} linux2;
 		struct {
 			__u8	h_i_frag;	/* Fragment number */
@@ -323,14 +354,19 @@ struct ext3_inode {
 #define i_size_high	i_dir_acl
 
 #if defined(__KERNEL__) || defined(__linux__)
-#define i_reserved1	osd1.linux1.l_i_reserved1
-#define i_frag		osd2.linux2.l_i_frag
-#define i_fsize		osd2.linux2.l_i_fsize
+/* For versioning -znjp */
+//#define i_reserved1	osd1.linux1.l_i_reserved1
+#define i_cowbitmap osd1.linux1.l_i_direct_cow_bitmap
+//#define i_frag		osd2.linux2.l_i_frag
+//#define i_fsize		osd2.linux2.l_i_fsize
 #define i_uid_low	i_uid
 #define i_gid_low	i_gid
+/* For versioning -znjp */
 #define i_uid_high	osd2.linux2.l_i_uid_high
 #define i_gid_high	osd2.linux2.l_i_gid_high
-#define i_reserved2	osd2.linux2.l_i_reserved2
+//#define i_reserved2	osd2.linux2.l_i_reserved2
+#define i_epch_number osd2.linux2.l_i_epoch_number
+#define i_nxt_inode osd2.linux2.l_i_next_inode
 
 #elif defined(__GNU__)
 
@@ -491,7 +527,9 @@ struct ext3_super_block {
 	__u16	s_reserved_word_pad;
 	__le32	s_default_mount_opts;
 	__le32	s_first_meta_bg;	/* First metablock block group */
-	__u32	s_reserved[190];	/* Padding to the end of the block */
+  /* Added for version - znjp */
+  __le32 s_epoch_number;
+	__u32	s_reserved[189];	/* Padding to the end of the block */
 };
 
 #ifdef __KERNEL__
@@ -633,6 +671,9 @@ struct ext3_dir_entry_2 {
 	__le16	rec_len;		/* Directory entry length */
 	__u8	name_len;		/* Name length */
 	__u8	file_type;
+  /* Added for versioning - znjp */
+  __u32 birth_epoch;
+  __u32 death_epoch;
 	char	name[EXT3_NAME_LEN];	/* File name */
 };
 
@@ -651,6 +692,21 @@ struct ext3_dir_entry_2 {
 
 #define EXT3_FT_MAX		8
 
+/* Versioning macros - znjp */
+#define EXT3_DIRENT_ALIVE 0
+#define EXT3_IS_DIRENT_ALIVE(de) ((le32_to_cpu(de->death_epoch) == EXT3_DIRENT_ALIVE))
+#define EXT3_IS_DIRENT_SCOPED(de, epoch) \
+((le32_to_cpu(de->birth_epoch) <= epoch) && \
+(EXT3_IS_DIRENT_ALIVE(de) || (!EXT3_IS_DIRENT_ALIVE(de) && \
+le32_to_cpu(de->death_epoch) > epoch)))
+#define EXT3_I_EPOCHNUMBER(inode) (((unsigned int)EXT3_I(inode)->i_epoch_number))
+#define EXT3_S_EPOCHNUMBER(sb) (((unsigned int)EXT3_SB(sb)->s_epoch_number))
+#define EXT3_I_NEXT_INODE(inode) (((unsigned int)EXT3_I(inode)->i_next_inode))
+#define EXT3_IS_UNVERSIONABLE(inode) (((unsigned int)EXT3_I(inode)->i_flags & EXT3_UNVERSIONABLE_FL))
+#define EXT3_IS_UNCHANGEABLE(inode) (((unsigned int)EXT3_I(inode)->i_flags & EXT3_UNCHANGEABLE_FL))
+#define EXT3_IS_FAKEINODE(inode) (((unsigned int)EXT3_I(inode)->i_flags & EXT3_FAKEINODE_FL))
+
+
 /*
  * EXT3_DIR_PAD defines the directory entries boundaries
  *
@@ -658,7 +714,8 @@ struct ext3_dir_entry_2 {
  */
 #define EXT3_DIR_PAD			4
 #define EXT3_DIR_ROUND			(EXT3_DIR_PAD - 1)
-#define EXT3_DIR_REC_LEN(name_len)	(((name_len) + 8 + EXT3_DIR_ROUND) & \
+/* Added 8 to account for birth and death epochs -znjp */
+#define EXT3_DIR_REC_LEN(name_len)	(((name_len) + 16 + EXT3_DIR_ROUND) & \
 					 ~EXT3_DIR_ROUND)
 /*
  * Hash Tree Directory indexing
@@ -778,6 +835,7 @@ extern int ext3_should_retry_alloc(struct super_block *sb, int *retries);
 extern void ext3_init_block_alloc_info(struct inode *);
 extern void ext3_rsv_window_add(struct super_block *sb, struct ext3_reserve_window_node *rsv);
 
+
 /* dir.c */
 extern int ext3_check_dir_entry(const char *, struct inode *,
 				struct ext3_dir_entry_2 *,
@@ -832,10 +890,14 @@ extern int ext3_ioctl (struct inode *, struct file *, unsigned int,
 extern long ext3_compat_ioctl (struct file *, unsigned int, unsigned long);
 
 /* namei.c */
+extern int is_unchangeable(struct inode *, struct dentry *);
 extern int ext3_orphan_add(handle_t *, struct inode *);
 extern int ext3_orphan_del(handle_t *, struct inode *);
 extern int ext3_htree_fill_tree(struct file *dir_file, __u32 start_hash,
 				__u32 start_minor_hash, __u32 *next_hash);
+extern struct inode *ext3_fake_inode(struct inode *, unsigned int);
+extern int ext3_dup_inode(struct inode *, struct inode *);
+extern int ext3_reclaim_dup_inode(struct inode *, struct inode *);
 
 /* resize.c */
 extern int ext3_group_add(struct super_block *sb,
@@ -853,6 +915,7 @@ extern void ext3_abort (struct super_block *, const char *, const char *, ...)
 extern void ext3_warning (struct super_block *, const char *, const char *, ...)
 	__attribute__ ((format (printf, 3, 4)));
 extern void ext3_update_dynamic_rev (struct super_block *sb);
+extern unsigned int ext3_take_snapshot(struct super_block *sb);
 
 #define ext3_std_error(sb, errno)				\
 do {								\
diff --git a/ext3/ext3_fs_i.h b/ext3co/ext3_fs_i.h
index 4395e52..8c9d6e0 100644
--- a/ext3/ext3_fs_i.h
+++ b/ext3co/ext3_fs_i.h
@@ -93,6 +93,11 @@ struct ext3_inode_info {
 	struct ext3_block_alloc_info *i_block_alloc_info;
 
 	__u32	i_dir_start_lookup;
+
+  /* For versioning -znjp */
+  __u16 i_cow_bitmap;
+  __u32 i_epoch_number;
+  __u32 i_next_inode;
 #ifdef CONFIG_EXT3_FS_XATTR
 	/*
 	 * Extended attributes can be read independently of the main file
diff --git a/ext3/ext3_fs_sb.h b/ext3co/ext3_fs_sb.h
index f61309c..593bec7 100644
--- a/ext3/ext3_fs_sb.h
+++ b/ext3co/ext3_fs_sb.h
@@ -64,6 +64,9 @@ struct ext3_sb_info {
 	struct rb_root s_rsv_window_root;
 	struct ext3_reserve_window_node s_rsv_window_head;
 
+  /* For versioning -znjp */
+  u32 s_epoch_number;
+
 	/* Journaling */
 	struct inode * s_journal_inode;
 	struct journal_s * s_journal;
